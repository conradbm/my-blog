{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","NavBar.js","App.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","i","className","key","to","substring","ArticlesListPage","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","articleInfo","params","find","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d33186c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage = () => {\r\n    return(\r\n        <>\r\n            <h1>Hello, welcome to my blog!</h1>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <>\r\n            <h1>About me</h1>\r\n            <p>Just a little bit about me here.\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n            adsadasdsadasdasdasdadsadad\r\n            adsasdadadadaddadadsadadada\r\n            asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n            <p>adasdasdasdadsdsadasdasdasd\r\n                adsadasdsadasdasdasdadsadad\r\n                adsasdadadadaddadadsadadada\r\n                asdsadsadasdsadsadsadsaddasd\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n// <ArticlesList> -> Resources for <ArticlesListPage> and when article selected, updates page content with articles and <Link> to article\r\n\r\nconst ArticlesList = ({articles}) => {\r\n    return(\r\n        <>\r\n            {articles.map((article,i) => (\r\n                <Link className=\"article-list-item\" key={i} to={`/article/${article.name}`}>\r\n                    <h3>{article.name}</h3>\r\n                    <p>{article.content[0].substring(0,150)}...</p>\r\n                </Link>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticlesList;","import React from 'react';\r\nimport articles from './article-content'\r\nimport ArticlesList from '../components/ArticlesList';\r\n// <ArticlesList> -> Loop through articles from article-content.js to populate the page, \r\n//                   each contains a <Link> which updates the page body <Route> in <Router>\r\n//                   When article is selected, the URL updates for the <Route> in App.js.\r\n//                   Probably the most important part, is now the information selected is available to\r\n//                   <ArticlePage> which updates the page body, parsing the url for data articles matching\r\n//                   the prior selected from list. This is how information is passed from one page to the next\r\n//                   on select.\r\n\r\nconst ArticlesListPage = () => {\r\n    return(\r\n        <>\r\n            <h1>Articles</h1>\r\n            <ArticlesList articles={articles} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticlesListPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n\r\n    return(\r\n\r\n        <h1>404: Page Not Found</h1>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\n\r\nconst CommentsList = ({comments}) => {\r\n    return(\r\n            <>\r\n                <h3>Comments</h3>\r\n                {comments.map((comment,i) => (\r\n                    <div className=\"comment\" key={i}>\r\n                        <h4>{comment.username}</h4>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </>\r\n    )\r\n};\r\n\r\nexport default CommentsList;","import React from 'react';\r\n\r\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n                            method:'post',\r\n                        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return(\r\n        <div id=\"upvotes-section\">\r\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p>This post has been upvoted {upvotes} times</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UpvotesSection;","import React, {useState} from 'react';\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method:'post',\r\n            body: JSON.stringify({username, text: commentText}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return(\r\n        <div id='add-comment-form'>\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}></input>\r\n            </label>\r\n            <label>\r\n                Comment:\r\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}></textarea>\r\n            </label>\r\n            <button onClick={() => addComment()}>Add Comment</button>    \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AddCommentForm;","import React, {useState, useEffect} from 'react';\r\nimport articles from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport 'whatwg-fetch';\r\n// for internet explorer support\r\n// npm install --save whatwg-fetch\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\n// <ArticlePage> -> Accessible by <Link> updating to <Route> in <Router> from <ArticlesListPage> or other article found here.\r\n//                  Will update page body.\r\n//                  Passes a \"match\" argument based on the <Route> to this URL from /article/:name in App.js. This maps the \r\n//                  name property to the match.params.name.\r\n//                  Importantly, we must parse the URL for the right article in data, update content accordingly, then \r\n//                  recommend all other articles that are not the same as the one selected as a posterior choice below.\r\n\r\nconst ArticlePage = ({match}) => {\r\n\r\n    // Set a state for the article values\r\n    const [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\r\n    \r\n    const name = match.params.name;\r\n    const article = articles.find(article => article.name === name);\r\n\r\n    \r\n    // useEffect hook\r\n    // Run when the component mounts and updates\r\n    // Only updates when `name` changes\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`)\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n        \r\n    }, [name]);\r\n    \r\n    const otherArticles = articles.filter(article => article.name !== name)\r\n\r\n    if (!article) return <NotFoundPage></NotFoundPage>\r\n\r\n    return(\r\n        <>\r\n            <h1>{article.title}</h1>\r\n            <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}></UpvotesSection>\r\n            {article.content.map((paragraph, i) => (\r\n                <p key={i}>{paragraph}</p>\r\n            ))}\r\n            <CommentsList comments={articleInfo.comments}></CommentsList>\r\n            <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}></AddCommentForm>\r\n\r\n            <h3>Other Articles:</h3>\r\n            <ArticlesList articles={otherArticles}></ArticlesList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArticlePage;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// <Link> -> To update the body of the page with a different <Route> in the <Router>\r\n\r\nconst NavBar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/articles-list\">Articles</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default NavBar;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar'\nimport NotFoundPage from './pages/NotFoundPage';\n// <Router> -> Display the body of the page with <Routes> updated by <Links> throughout the app.\n// <Switch> -> to check Routes and default to NotFound if none found\n\nfunction App() {\n  return (\n    \n    <Router>\n      <div className=\"App\">\n        <NavBar></NavBar>\n        <div id='page-body'>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles-list\" component={ArticlesListPage}  />\n            <Route path=\"/article/:name\" component={ArticlePage}  />\n            <Route component={NotFoundPage}></Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}